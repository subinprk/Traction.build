/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface ContactSubmissions {
  createdAt: Generated<Timestamp | null>;
  email: string;
  id: Generated<number>;
  message: string;
  name: string;
}

export interface EarlyAccessSignups {
  createdAt: Generated<Timestamp | null>;
  email: string;
  id: Generated<number>;
}

export interface DB {
  contactSubmissions: ContactSubmissions;
  earlyAccessSignups: EarlyAccessSignups;
}




// Note: kysely maps the table/column/enum names from snake_case to camelCase and PascalCase. When running SQL statements, make sure to use snake_case, but TypeScript code should use camelCase or PascalCase.